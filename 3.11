本题目要求计算下列分段函数f(x)的值：


注：可在头文件中包含math.h，并调用sqrt函数求平方根，调用pow函数求幂。
输入格式:

输入在一行中给出实数x。
输出格式:

在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。
输入样例1:

10

输出样例1:

f(10.00) = 3.16

输入样例2:

-0.5

输出样例2:

f(-0.50) = -2.75

#include <stdio.h>
#include <math.h>
 int main()
 {
     float x,y;
     scanf("%f",&x);
     if (x>=0)
     y=sqrt(x);
     else
         y=pow(x+1,2)+2*x+1/x;
     printf("f(%.2f) = %.2f",x,y);
     }
     
     
     编写一个程序，要求用户输入24小时制的时间，然后显示12小时制的时间。
输入格式：

输入在一行中给出带有中间的:符号（半角的冒号）的24小时制的时间，如12:34表示12点34分。当小时或分钟数小于10时，均没有前导的零，如5:6表示5点零6分。

提示：在scanf的格式字符串中加入:，让scanf来处理这个冒号。
输出格式：

在一行中输出这个时间对应的12小时制的时间，数字部分格式与输入的相同，然后跟上空格，再跟上表示上午的字符串AM或表示下午的字符串PM。如5:6 PM表示下午5点零6分。注意，在英文的习惯中，中午12点被认为是下午，所以24小时制的12:00就是12小时制的12:0 PM；而0点被认为是第二天的时间，所以是0:0 AM。
输入样例：

21:11

输出样例：

9:11 PM

#include <stdio.h>
int main ()
{
    int h,m,n;
    scanf("%d:%d",&h,&m);
    if (h<12||h==24)
        printf("%d:%d AM",h,m);
    else if(h==12)
        printf("%d:%d PM",h,m);
    else{
        n=h-12;
        printf("%d:%d PM",n,m);}
}


假设个人所得税为：税率×(工资−1600)。请编写程序计算应缴的所得税，其中税率定义为：

    当工资不超过1600时，税率为0；
    当工资在区间(1600, 2500]时，税率为5%；
    当工资在区间(2500, 3500]时，税率为10%；
    当工资在区间(3500, 4500]时，税率为15%；
    当工资超过4500时，税率为20%。

输入格式:

输入在一行中给出非负工资。
输出格式:

在一行输出个人所得税，精确到小数点后2位。
输入样例1:

1600

输出样例1:

0.00

输入样例2:

1601

输出样例2:

0.05

输入样例3:

3000

输出样例3:

140.00

输入样例4:

4000

输出样例4:

360.00

输入样例5:

5000

输出样例5:

680.00



#include <stdio.h>
int main()
{
    int m;
    float r,s;
    scanf("%d",&m);
    if(m<=1600){
        r=0.00;}
    else if(m<=2500){
        r=0.05;}
    else if (m<=3500){
        r=0.10;}
    else if (m<=4500){
        r=0.15;}
    else {
        r=0.20;}
    s=(m-1600)*r;
        printf("%.2f",fabs(s));
        
        
}


本题要求编写一个简单计算器程序，可根据输入的运算符，对2个整数进行加、减、乘、除或求余运算。题目保证输入和输出均不超过整型范围。
输入格式：

输入在一行中依次输入操作数1、运算符、操作数2，其间以1个空格分隔。操作数的数据类型为整型，且保证除法和求余的分母非零。
输出格式：

当运算符为+、-、*、/、%时，在一行输出相应的运算结果。若输入是非法符号（即除了加、减、乘、除和求余五种运算符以外的其他符号）则输出ERROR。
输入样例1：

-7 / 2

输出样例1：

-3

输入样例2：

3 & 6

输出样例2：

ERROR


#include <stdio.h>
int main()
{
    int a,b;
    char op;
    scanf("%d %c %d",&a,&op,&b);
    switch(op)
    {
    case'+':printf("%d",a+b);break;
    case'-':printf("%d",a-b);break;
    case'*':printf("%d",a*b);break;
    case'/':printf("%d",a/b);break;
    case'%':printf("%d",a%b);break;
    default:printf("ERROR");
    }
    return 0;
}


据说一个人的标准体重应该是其身高（单位：厘米）减去100、再乘以0.9所得到的公斤数。真实体重与标准体重误差在10%以内都是完美身材（即 | 真实体重 − 标准体重 | < 标准体重×10%）。已知市斤是公斤的两倍。现给定一群人的身高和实际体重，请你告诉他们是否太胖或太瘦了。
输入格式：

输入第一行给出一个正整数N（≤ 20）。随后N行，每行给出两个整数，分别是一个人的身高H（120 < H < 200；单位：厘米）和真实体重W（50 < W ≤ 300；单位：市斤），其间以空格分隔。
输出格式：

为每个人输出一行结论：如果是完美身材，输出You are wan mei!；如果太胖了，输出You are tai pang le!；否则输出You are tai shou le!。
输入样例：

3
169 136
150 81
178 155

输出样例：

You are wan mei!
You are tai shou le!
You are tai pang le!



#include <stdio.h>
#include <math.h>
int main()
{
  int i,h,w;
  float s,p,b,a;  
    scanf("%d",&i);
    while(i!=0){
       scanf("%d %d",&h,&w);
       s=(h-100)*0.9;
       a=w-s*2;
       p=fabs(a);
       if(p<s*0.2){
           printf("You are wan mei!\n");}
       else if(a<0){
             printf("You are tai shou le!\n");} 
            else if (a>0){
              printf("You are tai pang le!\n");}
       i--;}
    return 0;
}





专家通过多组情侣研究数据发现，最佳的情侣身高差遵循着一个公式：（女方的身高）×1.09 =（男方的身高）。如果符合，你俩的身高差不管是牵手、拥抱、接吻，都是最和谐的差度。

下面就请你写个程序，为任意一位用户计算他/她的情侣的最佳身高。
输入格式：

输入第一行给出正整数N（≤10），为前来查询的用户数。随后N行，每行按照“性别 身高”的格式给出前来查询的用户的性别和身高，其中“性别”为“F”表示女性、“M”表示男性；“身高”为区间 [1.0, 3.0] 之间的实数。
输出格式：

对每一个查询，在一行中为该用户计算出其情侣的最佳身高，保留小数点后2位。
输入样例：

2
M 1.75
F 1.8

输出样例：

1.61
1.96

#include <stdio.h>
int main ()
{
    int i;
    float h,H;
    char c;
    scanf("%d\n",&i);
     while(i!=0){
        scanf("%c %f\n",&c,&h);
        switch(c)
        {
            case'F':H=h*1.09;printf("%.2f\n",H);break;
            case'M':H=h/1.09;printf("%.2f\n",H);break;
        }
         i--;
     }
    return 0;
}



























     
     
     
     
     
     
     
     
